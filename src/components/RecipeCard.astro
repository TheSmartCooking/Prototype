---
import '../styles/global.css';

const {
    author_id,
    author_name,
    cook_time,
    difficulty_level,
    number_of_reviews,
    picture_id,
    recipe_id,
    recipe_status,
    title,
} = Astro.props;
---
<Fragment>
    <div class="recipe-polaroid">
        <div class="card-body" style=`background-image: url("recipe/${picture_id}.png");`>
            <div class="card-top">
                <div class="card-text cook-time">‚è± {cook_time}</div>
                <div class="card-text recipe-status">{recipe_status}</div>
            </div>
            <div class="card-bottom">
                <div class="card-text recipe-author">@{author_name}</div>
                <div class="card-text recipe-likes">{number_of_reviews || 0} likes</div>
            </div>
        </div>
        <div class="recipe-title">
            <h1>{title}</h1>
        </div>
    </div>
</Fragment>

<style>
    .recipe-polaroid {
        align-items: center;
        background-color: var(--polaroid-color);
        border: 1px solid #888;
        cursor: pointer;
        display: flex;
        flex-direction: column;
        height: var(--polaroid-height);
        user-select: none;
        width: var(--polaroid-width);
    }

    .recipe-title {
        height: 100%;
        display: flex;
        flex-direction: column;
        justify-content: center;
    }

    .recipe-title > h1 {
        color: light-dark(var(--color-secondary), var(--color-primary));
    }

    .card-body {
        background-size: cover;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        margin-top: var(--polaroid-margin-top);
        min-height: var(--polaroid-photo-size);
        width: var(--polaroid-photo-size);
    }

    .card-body * {
        filter: drop-shadow(0 0 var(--spacing-small) var(--polaroid-color));
        font-size: var(--font-size-body);
    }

    .card-top,
    .card-bottom {
        display: flex;
        justify-content: space-between;
    }

    /* The status will not be displayed for now */
    .recipe-status {
        display: none;
    }

    /* Pseudo-elements */

    .card:hover {
        filter: brightness(1.1);
        transform: rotate(2deg);
    }

    .cook-time::after {
        content: "'";
    }
</style>
